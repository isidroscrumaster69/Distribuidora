<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IiIAiIgP/9k=
</value>
  </data>
</root>